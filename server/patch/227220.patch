diff --git a/server/src/com/openrsc/server/net/RSCMultiPortDecoder.java b/server/src/com/openrsc/server/net/RSCMultiPortDecoder.java
index ed6b28a..f8298a6 100644
--- a/server/src/com/openrsc/server/net/RSCMultiPortDecoder.java
+++ b/server/src/com/openrsc/server/net/RSCMultiPortDecoder.java
@@ -8,7 +8,6 @@ import io.netty.handler.codec.http.HttpObjectAggregator;
 import io.netty.handler.codec.http.HttpServerCodec;
 import io.netty.handler.codec.http.websocketx.WebSocketServerProtocolHandler;
 import io.netty.handler.codec.http.websocketx.extensions.compression.WebSocketServerCompressionHandler;
-import io.netty.handler.ssl.OptionalSslHandler;
 import io.netty.util.Attribute;
 import io.netty.util.AttributeKey;
 import io.netty.util.AttributeMap;
@@ -52,7 +51,9 @@ public final class RSCMultiPortDecoder extends ByteToMessageDecoder implements A
 	}
 
 	private void addWebHandlerStack(ChannelHandlerContext ctx) {
-		ctx.pipeline().addFirst(new OptionalSslHandler(this.server.getSSLContext()));
+		if (server.getSSLContext() != null) {
+			ctx.pipeline().addFirst(server.getSSLContext().newHandler(ctx.alloc()));
+		}
 		ctx.pipeline().addBefore(Server.rscConnectionHandlerId, "httpcodec", new HttpServerCodec());
 		ctx.pipeline().addBefore(Server.rscConnectionHandlerId, "aggregator", new HttpObjectAggregator(65536));
 		ctx.pipeline().addBefore(Server.rscConnectionHandlerId, "httphandler", new HttpRequestHandler("/"));
